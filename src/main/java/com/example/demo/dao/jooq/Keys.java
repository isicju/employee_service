/*
 * This file is generated by jOOQ.
 */
package com.example.demo.dao.jooq;


import com.example.demo.dao.jooq.tables.Countries;
import com.example.demo.dao.jooq.tables.Departments;
import com.example.demo.dao.jooq.tables.Employees;
import com.example.demo.dao.jooq.tables.JobHistory;
import com.example.demo.dao.jooq.tables.Jobs;
import com.example.demo.dao.jooq.tables.Locations;
import com.example.demo.dao.jooq.tables.Regions;
import com.example.demo.dao.jooq.tables.records.CountriesRecord;
import com.example.demo.dao.jooq.tables.records.DepartmentsRecord;
import com.example.demo.dao.jooq.tables.records.EmployeesRecord;
import com.example.demo.dao.jooq.tables.records.JobHistoryRecord;
import com.example.demo.dao.jooq.tables.records.JobsRecord;
import com.example.demo.dao.jooq.tables.records.LocationsRecord;
import com.example.demo.dao.jooq.tables.records.RegionsRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.jooq.types.UInteger;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>hr</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<LocationsRecord, UInteger> IDENTITY_LOCATIONS = Identities0.IDENTITY_LOCATIONS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CountriesRecord> KEY_COUNTRIES_PRIMARY = UniqueKeys0.KEY_COUNTRIES_PRIMARY;
    public static final UniqueKey<DepartmentsRecord> KEY_DEPARTMENTS_PRIMARY = UniqueKeys0.KEY_DEPARTMENTS_PRIMARY;
    public static final UniqueKey<EmployeesRecord> KEY_EMPLOYEES_PRIMARY = UniqueKeys0.KEY_EMPLOYEES_PRIMARY;
    public static final UniqueKey<JobHistoryRecord> KEY_JOB_HISTORY_EMPLOYEE_ID = UniqueKeys0.KEY_JOB_HISTORY_EMPLOYEE_ID;
    public static final UniqueKey<JobsRecord> KEY_JOBS_PRIMARY = UniqueKeys0.KEY_JOBS_PRIMARY;
    public static final UniqueKey<LocationsRecord> KEY_LOCATIONS_PRIMARY = UniqueKeys0.KEY_LOCATIONS_PRIMARY;
    public static final UniqueKey<RegionsRecord> KEY_REGIONS_PRIMARY = UniqueKeys0.KEY_REGIONS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CountriesRecord, RegionsRecord> COUNTRIES_IBFK_1 = ForeignKeys0.COUNTRIES_IBFK_1;
    public static final ForeignKey<DepartmentsRecord, LocationsRecord> DEPARTMENTS_IBFK_1 = ForeignKeys0.DEPARTMENTS_IBFK_1;
    public static final ForeignKey<EmployeesRecord, JobsRecord> EMPLOYEES_IBFK_1 = ForeignKeys0.EMPLOYEES_IBFK_1;
    public static final ForeignKey<EmployeesRecord, DepartmentsRecord> EMPLOYEES_IBFK_2 = ForeignKeys0.EMPLOYEES_IBFK_2;
    public static final ForeignKey<JobHistoryRecord, EmployeesRecord> JOB_HISTORY_IBFK_1 = ForeignKeys0.JOB_HISTORY_IBFK_1;
    public static final ForeignKey<JobHistoryRecord, JobsRecord> JOB_HISTORY_IBFK_2 = ForeignKeys0.JOB_HISTORY_IBFK_2;
    public static final ForeignKey<JobHistoryRecord, DepartmentsRecord> JOB_HISTORY_IBFK_3 = ForeignKeys0.JOB_HISTORY_IBFK_3;
    public static final ForeignKey<LocationsRecord, CountriesRecord> LOCATIONS_IBFK_1 = ForeignKeys0.LOCATIONS_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<LocationsRecord, UInteger> IDENTITY_LOCATIONS = Internal.createIdentity(Locations.LOCATIONS, Locations.LOCATIONS.LOCATION_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CountriesRecord> KEY_COUNTRIES_PRIMARY = Internal.createUniqueKey(Countries.COUNTRIES, "KEY_countries_PRIMARY", new TableField[] { Countries.COUNTRIES.COUNTRY_ID }, true);
        public static final UniqueKey<DepartmentsRecord> KEY_DEPARTMENTS_PRIMARY = Internal.createUniqueKey(Departments.DEPARTMENTS, "KEY_departments_PRIMARY", new TableField[] { Departments.DEPARTMENTS.DEPARTMENT_ID }, true);
        public static final UniqueKey<EmployeesRecord> KEY_EMPLOYEES_PRIMARY = Internal.createUniqueKey(Employees.EMPLOYEES, "KEY_employees_PRIMARY", new TableField[] { Employees.EMPLOYEES.EMPLOYEE_ID }, true);
        public static final UniqueKey<JobHistoryRecord> KEY_JOB_HISTORY_EMPLOYEE_ID = Internal.createUniqueKey(JobHistory.JOB_HISTORY, "KEY_job_history_employee_id", new TableField[] { JobHistory.JOB_HISTORY.EMPLOYEE_ID, JobHistory.JOB_HISTORY.START_DATE }, true);
        public static final UniqueKey<JobsRecord> KEY_JOBS_PRIMARY = Internal.createUniqueKey(Jobs.JOBS, "KEY_jobs_PRIMARY", new TableField[] { Jobs.JOBS.JOB_ID }, true);
        public static final UniqueKey<LocationsRecord> KEY_LOCATIONS_PRIMARY = Internal.createUniqueKey(Locations.LOCATIONS, "KEY_locations_PRIMARY", new TableField[] { Locations.LOCATIONS.LOCATION_ID }, true);
        public static final UniqueKey<RegionsRecord> KEY_REGIONS_PRIMARY = Internal.createUniqueKey(Regions.REGIONS, "KEY_regions_PRIMARY", new TableField[] { Regions.REGIONS.REGION_ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<CountriesRecord, RegionsRecord> COUNTRIES_IBFK_1 = Internal.createForeignKey(Keys.KEY_REGIONS_PRIMARY, Countries.COUNTRIES, "countries_ibfk_1", new TableField[] { Countries.COUNTRIES.REGION_ID }, true);
        public static final ForeignKey<DepartmentsRecord, LocationsRecord> DEPARTMENTS_IBFK_1 = Internal.createForeignKey(Keys.KEY_LOCATIONS_PRIMARY, Departments.DEPARTMENTS, "departments_ibfk_1", new TableField[] { Departments.DEPARTMENTS.LOCATION_ID }, true);
        public static final ForeignKey<EmployeesRecord, JobsRecord> EMPLOYEES_IBFK_1 = Internal.createForeignKey(Keys.KEY_JOBS_PRIMARY, Employees.EMPLOYEES, "employees_ibfk_1", new TableField[] { Employees.EMPLOYEES.JOB_ID }, true);
        public static final ForeignKey<EmployeesRecord, DepartmentsRecord> EMPLOYEES_IBFK_2 = Internal.createForeignKey(Keys.KEY_DEPARTMENTS_PRIMARY, Employees.EMPLOYEES, "employees_ibfk_2", new TableField[] { Employees.EMPLOYEES.DEPARTMENT_ID }, true);
        public static final ForeignKey<JobHistoryRecord, EmployeesRecord> JOB_HISTORY_IBFK_1 = Internal.createForeignKey(Keys.KEY_EMPLOYEES_PRIMARY, JobHistory.JOB_HISTORY, "job_history_ibfk_1", new TableField[] { JobHistory.JOB_HISTORY.EMPLOYEE_ID }, true);
        public static final ForeignKey<JobHistoryRecord, JobsRecord> JOB_HISTORY_IBFK_2 = Internal.createForeignKey(Keys.KEY_JOBS_PRIMARY, JobHistory.JOB_HISTORY, "job_history_ibfk_2", new TableField[] { JobHistory.JOB_HISTORY.JOB_ID }, true);
        public static final ForeignKey<JobHistoryRecord, DepartmentsRecord> JOB_HISTORY_IBFK_3 = Internal.createForeignKey(Keys.KEY_DEPARTMENTS_PRIMARY, JobHistory.JOB_HISTORY, "job_history_ibfk_3", new TableField[] { JobHistory.JOB_HISTORY.DEPARTMENT_ID }, true);
        public static final ForeignKey<LocationsRecord, CountriesRecord> LOCATIONS_IBFK_1 = Internal.createForeignKey(Keys.KEY_COUNTRIES_PRIMARY, Locations.LOCATIONS, "locations_ibfk_1", new TableField[] { Locations.LOCATIONS.COUNTRY_ID }, true);
    }
}
