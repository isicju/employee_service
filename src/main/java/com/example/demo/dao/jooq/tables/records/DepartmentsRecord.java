/*
 * This file is generated by jOOQ.
 */
package com.example.demo.dao.jooq.tables.records;


import com.example.demo.dao.jooq.tables.Departments;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DepartmentsRecord extends UpdatableRecordImpl<DepartmentsRecord> implements Record4<UInteger, String, UInteger, UInteger> {

    private static final long serialVersionUID = -979245754;

    /**
     * Setter for <code>hr.departments.department_id</code>.
     */
    public void setDepartmentId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>hr.departments.department_id</code>.
     */
    public UInteger getDepartmentId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>hr.departments.department_name</code>.
     */
    public void setDepartmentName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>hr.departments.department_name</code>.
     */
    public String getDepartmentName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>hr.departments.manager_id</code>.
     */
    public void setManagerId(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>hr.departments.manager_id</code>.
     */
    public UInteger getManagerId() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>hr.departments.location_id</code>.
     */
    public void setLocationId(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>hr.departments.location_id</code>.
     */
    public UInteger getLocationId() {
        return (UInteger) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UInteger, String, UInteger, UInteger> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UInteger, String, UInteger, UInteger> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return Departments.DEPARTMENTS.DEPARTMENT_ID;
    }

    @Override
    public Field<String> field2() {
        return Departments.DEPARTMENTS.DEPARTMENT_NAME;
    }

    @Override
    public Field<UInteger> field3() {
        return Departments.DEPARTMENTS.MANAGER_ID;
    }

    @Override
    public Field<UInteger> field4() {
        return Departments.DEPARTMENTS.LOCATION_ID;
    }

    @Override
    public UInteger component1() {
        return getDepartmentId();
    }

    @Override
    public String component2() {
        return getDepartmentName();
    }

    @Override
    public UInteger component3() {
        return getManagerId();
    }

    @Override
    public UInteger component4() {
        return getLocationId();
    }

    @Override
    public UInteger value1() {
        return getDepartmentId();
    }

    @Override
    public String value2() {
        return getDepartmentName();
    }

    @Override
    public UInteger value3() {
        return getManagerId();
    }

    @Override
    public UInteger value4() {
        return getLocationId();
    }

    @Override
    public DepartmentsRecord value1(UInteger value) {
        setDepartmentId(value);
        return this;
    }

    @Override
    public DepartmentsRecord value2(String value) {
        setDepartmentName(value);
        return this;
    }

    @Override
    public DepartmentsRecord value3(UInteger value) {
        setManagerId(value);
        return this;
    }

    @Override
    public DepartmentsRecord value4(UInteger value) {
        setLocationId(value);
        return this;
    }

    @Override
    public DepartmentsRecord values(UInteger value1, String value2, UInteger value3, UInteger value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DepartmentsRecord
     */
    public DepartmentsRecord() {
        super(Departments.DEPARTMENTS);
    }

    /**
     * Create a detached, initialised DepartmentsRecord
     */
    public DepartmentsRecord(UInteger departmentId, String departmentName, UInteger managerId, UInteger locationId) {
        super(Departments.DEPARTMENTS);

        set(0, departmentId);
        set(1, departmentName);
        set(2, managerId);
        set(3, locationId);
    }
}
